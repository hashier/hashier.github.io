<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>software on ~/christopher.loessl</title>
    <link>https://loessl.org/tags/software/</link>
    <description>~/christopher.loessl (software)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 21 Aug 2013 19:19:00 +0000</lastBuildDate>
    
    <atom:link href="https://loessl.org/tags/software/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Automatically Increment Build Number (CFBundleVersion)</title>
      <link>https://loessl.org/posts/automatically-increment-build-number-cfbundleversion/</link>
      <pubDate>Wed, 21 Aug 2013 19:19:00 +0000</pubDate>
      
      <guid>https://loessl.org/posts/automatically-increment-build-number-cfbundleversion/</guid>
      <description>&lt;p&gt;David wrote this nice little helper that automatically increments the build version every time.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;buildNumber&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;/usr/libexec/PlistBuddy -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Print CFBundleVersion&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$INFOPLIST_FILE&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
buildNumber&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;echo $buildNumber | sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/0*//&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
buildNumber&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt;$buildNumber &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;
buildNumber&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%04d&amp;#34;&lt;/span&gt; $buildNumber&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
/usr/libexec/PlistBuddy -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Set :CFBundleVersion &lt;/span&gt;$buildNumber&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$INFOPLIST_FILE&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In Xcode just head over to &amp;ldquo;Build Phases&amp;rdquo; of your target and &amp;ldquo;Editor&amp;rdquo; -&amp;gt; &amp;ldquo;Add Build Phase&amp;rdquo; -&amp;gt; &amp;ldquo;Add Run Script Build Phase&amp;rdquo; there you can just simply paste this little script and every time you build your app the build version gets incremented.&lt;/p&gt;
&lt;p&gt;So at least I can see how many times I build a certain project.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mission Control</title>
      <link>https://loessl.org/posts/mission-control/</link>
      <pubDate>Mon, 20 May 2013 18:29:00 +0000</pubDate>
      
      <guid>https://loessl.org/posts/mission-control/</guid>
      <description>&lt;p&gt;To get mission control to pop up fast just write this to your plist file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;defaults write com.apple.dock expose-animation-duration -float 0.1; killall Dock
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And with&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;defaults delete com.apple.dock expose-animation-duration; killall Dock
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;you can get back to default setting.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Who opens my UPnP ports?</title>
      <link>https://loessl.org/posts/who-opens-my-upnp-ports/</link>
      <pubDate>Tue, 07 May 2013 16:11:00 +0000</pubDate>
      
      <guid>https://loessl.org/posts/who-opens-my-upnp-ports/</guid>
      <description>&lt;p&gt;Recently I turned on UPnP (Universal Plug and Play) to play a bit with it and instantly noticed that someone/something opened some ports in my router and forwarded them to my machine. So of course I wanted to know what&amp;rsquo;s going on on my network.&lt;/p&gt;
&lt;p&gt;First idea &amp;ldquo;wireshark&amp;rdquo; but this only gives you information from which port these UPnP stuff goes, it doesn&amp;rsquo;t tell you the application that initiated these packages. For the curious here is the &lt;a href=&#34;http://wiki.wireshark.org/SSDP&#34;&gt;filter&lt;/a&gt; you can use:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;udp.dstport &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1900&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; http &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ip.addr &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; 192.168.1.100
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;UPnP uses the &lt;a href=&#34;http://en.wikipedia.org/wiki/Simple_Service_Discovery_Protocol&#34;&gt;SSDP&lt;/a&gt; protocol which isn&amp;rsquo;t implemented by wireshark but you can simply use the http protocol because SSDP is based on &lt;a href=&#34;http://en.wikipedia.org/wiki/HTTPU&#34;&gt;HTTPU&lt;/a&gt; (yes, HTTPU).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Imagine a picture that shows you that port 4500 and 5353 are open&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So port 4500 and 5353 (both UDP) are forwarded to my Mac but which software is behind this? Strangely&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;lsof -i :4500
lsof -i :5353
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Booth show nothing&amp;hellip; which means right now nothing is listening on those ports on my machine.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Let&amp;rsquo;s see which &amp;ldquo;normal&amp;rdquo; services listen on those ports. Of course this is not 100 % certain since any program could listen on those ports.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ grep &lt;span style=&#34;color:#ae81ff&#34;&gt;4500&lt;/span&gt; /etc/services
ipsec-msft      4500/udp    &lt;span style=&#34;color:#75715e&#34;&gt;# Microsoft IPsec NAT-T&lt;/span&gt;
ipsec-msft      4500/tcp    &lt;span style=&#34;color:#75715e&#34;&gt;# Microsoft IPsec NAT-T&lt;/span&gt;

$ grep &lt;span style=&#34;color:#ae81ff&#34;&gt;5353&lt;/span&gt; /etc/services
&lt;span style=&#34;color:#75715e&#34;&gt;#               5353        Unassigned&lt;/span&gt;
mdns            5353/udp    &lt;span style=&#34;color:#75715e&#34;&gt;# Multicast DNS&lt;/span&gt;
mdns            5353/tcp    &lt;span style=&#34;color:#75715e&#34;&gt;# Multicast DNS&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I didn&amp;rsquo;t do anything with VPN or IPsec so I started googling and found this &lt;a href=&#34;http://support.apple.com/kb/TS1629&#34;&gt;Apple KB entry&lt;/a&gt; which explained to me which services forward those ports and apparently it&amp;rsquo;s just &amp;ldquo;Back to My Mac&amp;rdquo; and some &amp;ldquo;Bonjour&amp;rdquo; stuff.&lt;/p&gt;
&lt;p&gt;For the case that the service is still up and running on the port the &lt;code&gt;lsof&lt;/code&gt; output would look something like this, where you can easily read the &lt;code&gt;command&lt;/code&gt; and &lt;code&gt;PID&lt;/code&gt; that is listening on a given port:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ lsof -i :32323
COMMAND   PID    USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME
Python  &lt;span style=&#34;color:#ae81ff&#34;&gt;21495&lt;/span&gt; hashier    3u  IPv4 0x23f1441a8dbc1b79      0t0  TCP *:32323 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;LISTEN&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In this case I just started a python script which binds to port &lt;code&gt;32323&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Some other quick tips of &lt;code&gt;lsof&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Print established TCP connections:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;lsof -P -iTCP -sTCP:ESTABLISHED
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Print listening TCP connections:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ lsof -P -iTCP -sTCP:LISTEN
...
Python    &lt;span style=&#34;color:#ae81ff&#34;&gt;21495&lt;/span&gt; hashier    3u  IPv4 0x23f1441a8dbc1b79      0t0  TCP *:32323 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;LISTEN&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and here we can as well see the listening python TCP server on &lt;code&gt;32323&lt;/code&gt;. This is a very quick way to find out all the services that are waiting for a connection.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to fix slow Ubuntu in VirtualBox</title>
      <link>https://loessl.org/posts/how-to-fix-slow-ubuntu-in-vbox/</link>
      <pubDate>Sat, 23 Feb 2013 00:18:00 +0000</pubDate>
      
      <guid>https://loessl.org/posts/how-to-fix-slow-ubuntu-in-vbox/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;&lt;code&gt;apt-get install linux-headers-generic build-essential 2. compizconfig-settings-manager dkms&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Install the guest drivers&lt;/li&gt;
&lt;li&gt;Open ccsm (from the console) and disable &amp;ldquo;Framebuffer object&amp;rdquo; option under &amp;ldquo;OpenGL&amp;rdquo; (be prepared that you won&amp;rsquo;t be able to read much, but if you activate 3D first, then it will be even worse)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shutdown -h now&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Activate 3D acceleration in VirtualBox&lt;/li&gt;
&lt;li&gt;power on&lt;/li&gt;
&lt;li&gt;done.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;/usr/lib/nux/unity_support_test -p
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Source:
&lt;a href=&#34;http://askubuntu.com/questions/207813/why-does-an-ubuntu-12-10-guest-in-virtualbox-run-very-very-slowly/214968#214968&#34;&gt;http://askubuntu.com/questions/207813/why-does-an-ubuntu-12-10-guest-in-virtualbox-run-very-very-slowly/214968#214968&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>FreeMind</title>
      <link>https://loessl.org/posts/freemind/</link>
      <pubDate>Wed, 20 Feb 2013 11:17:00 +0000</pubDate>
      
      <guid>https://loessl.org/posts/freemind/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://freemind.sourceforge.net/wiki/index.php/Main_Page&#34;&gt;FreeMind&lt;/a&gt; is a mind-mapping software I recently started to use and I like it, so far. But let the webpage talk for itself:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FreeMind is a premier free mind-mapping software written in Java. The recent development has hopefully turned it into high productivity tool. We are proud that the operation and navigation of FreeMind is faster than that of MindManager because of one-click &amp;ldquo;fold / unfold&amp;rdquo; and &amp;ldquo;follow link&amp;rdquo; operations.&lt;/p&gt;
&lt;p&gt;So you want to write a completely new metaphysics? Why don&amp;rsquo;t you use FreeMind? You have a tool at hand that remarkably resembles the tray slips of Robert Pirsig, described in his sequel to Zen and the Art of Motorcycle Maintenance called Lila. Do you want to refactor your essays in a similar way you would refactor software? Or do you want to keep personal knowledge base, which is easy to manage? Why don&amp;rsquo;t you try FreeMind? Do you want to prioritize, know where you are, where you&amp;rsquo;ve been and where you are heading, as Stephen Covey would advise you? Have you tried FreeMind to keep track of all the things that are needed for that?&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>How to run FreeMind on Mountain Lion</title>
      <link>https://loessl.org/posts/how-to-run-freemind-on-ml/</link>
      <pubDate>Thu, 07 Feb 2013 20:05:00 +0000</pubDate>
      
      <guid>https://loessl.org/posts/how-to-run-freemind-on-ml/</guid>
      <description>&lt;p&gt;If you try to run FreeMind on Mountain Lion you get this &amp;ldquo;nice&amp;rdquo; error message:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;FreeMind.app&amp;rdquo; is damaged and can&amp;rsquo;t be opened. You should move it to the Trash.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To persuade FreeMind to run anyway you can type this command into your console:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;java -jar /Applications/FreeMind.app/Contents/Resources/Java/lib/freemind.jar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I read on the internet that you can disable GateKeeper as well to run FreeMind but I didn&amp;rsquo;t try it.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java, the hopefully last round</title>
      <link>https://loessl.org/posts/java-hopefully-last-round/</link>
      <pubDate>Thu, 07 Feb 2013 18:37:00 +0000</pubDate>
      
      <guid>https://loessl.org/posts/java-hopefully-last-round/</guid>
      <description>&lt;p&gt;I had a fresh installation of Mountain Lion and installed Java 7. The problem was when I tried to run StandAloneJava applications ML always asked me whether it should install Java 6. Apparently a lot of people have this problem and here is the solution how to solve it.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo mkdir /System/Library/Java/JavaVirtualMachines
sudo ln -s /Library/Java/JavaVirtualMachines/jdk_VERSION /System/Library/Java/JavaVirtualMachines/1.6.0.jdk
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;of course you have to amend VERSION to match your Java 7 version.&lt;/p&gt;
&lt;p&gt;Caveat:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Watch out for doing the symlink&amp;hellip; Apple released 1.6 security update recently. If you apply this update from Apple, the symlink seems to fool the update and installs 1.6 update into where the symlink points to, i.e. Oracle&amp;rsquo;s 1.7.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://apple.stackexchange.com/questions/58203/mountain-lion-with-java-7-only&#34;&gt;– Jonah Tsai Jan 19 at 18:04&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>iTunes: sort albums by year instead of name</title>
      <link>https://loessl.org/posts/itunes-sort-albums-by-year/</link>
      <pubDate>Wed, 06 Feb 2013 18:27:28 +0000</pubDate>
      
      <guid>https://loessl.org/posts/itunes-sort-albums-by-year/</guid>
      <description>&lt;p&gt;By default iTunes sorts albums by name instead of year for whatever reason.&lt;/p&gt;
&lt;p&gt;Anyway with&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;⌘j&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;you can set the sorting to year.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java, a new round. Round 7</title>
      <link>https://loessl.org/posts/java-a-new-round-round-7/</link>
      <pubDate>Mon, 04 Feb 2013 13:10:00 +0000</pubDate>
      
      <guid>https://loessl.org/posts/java-a-new-round-round-7/</guid>
      <description>&lt;p&gt;After fighting against Java 6 from Apple I decided to install Java 7 and have a look into that. To say the least, I still feel quite nauseous so I keep this EXTREMELY short.&lt;/p&gt;
&lt;p&gt;To get rid of Java 7 from Oracle you have to do this:&lt;/p&gt;
&lt;h2 id=&#34;remove-jre&#34;&gt;Remove JRE&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Navigate to &lt;code&gt;/Library/Internet Plug-Ins&lt;/code&gt; and remove &lt;code&gt;the JavaAppletPlugin.plugin&lt;/code&gt; directory&lt;/li&gt;
&lt;li&gt;Navigate to &lt;code&gt;/Library/PreferencePanes&lt;/code&gt; and remove &lt;code&gt;JavaControlPanel.prefpane&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;remove-jdk&#34;&gt;Remove JDK&lt;/h2&gt;
&lt;p&gt;Navigate to &lt;code&gt;/Library/Java/JavaVirtualMachines&lt;/code&gt; and remove the directory of the &lt;code&gt;JDK&lt;/code&gt; you want to get rid of.&lt;/p&gt;
&lt;h2 id=&#34;removing-the-pref-panel&#34;&gt;Removing the Pref-Panel&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo rm -rf /Library/PreferencePanes/JavaControlPanel.prefpane
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;sources&#34;&gt;Sources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.oracle.com/javase/7/docs/webnotes/install/mac/mac-jre.html&#34;&gt;http://docs.oracle.com/javase/7/docs/webnotes/install/mac/mac-jre.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.oracle.com/javase/7/docs/webnotes/install/mac/mac-jdk.html&#34;&gt;http://docs.oracle.com/javase/7/docs/webnotes/install/mac/mac-jdk.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Getting rid of Java on a Mac</title>
      <link>https://loessl.org/posts/getting-rid-of-java-on-a-mac/</link>
      <pubDate>Sat, 02 Feb 2013 11:38:00 +0000</pubDate>
      
      <guid>https://loessl.org/posts/getting-rid-of-java-on-a-mac/</guid>
      <description>&lt;p&gt;If you installed Java from Apple then you have the problem, that you have got a very old Version of Java.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ java -version
java version &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.6.0_37&amp;#34;&lt;/span&gt;Java&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;TM&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; SE Runtime Environment &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;build 1.6.0_37-b06-434-11M3909&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
Java HotSpot&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;TM&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 64-Bit Server VM &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;build 20.12-b01-434, mixed mode&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Java get&amp;rsquo;s installed as a .pkg file and here is how to figure out which files this .pkg installed (unfortunately I haven&amp;rsquo;t found out where the pre- and postflight scripts are so you have to hope they don&amp;rsquo;t do anything nasty).&lt;/p&gt;
&lt;p&gt;First things first; some essential Java files are on your system after a fresh installation, so we have to figure out what files are there from the beginning. To do this we have look into&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;/Library/Receipts/InstallHistory.plist
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Right on top you can see that the &amp;ldquo;OS X Installer&amp;rdquo; installed two packages called &amp;ldquo;JavaTools&amp;rdquo; and &amp;ldquo;JavaEssentials&amp;rdquo; so we don&amp;rsquo;t touch them.&lt;/p&gt;
&lt;p&gt;Now we try to figure out all Java .pkgs that were installed:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;grep -i Java /Library/Receipts/InstallHistory.plist
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So we know that we have to uninstall: &amp;ldquo;JavaForMacOSX107&amp;rdquo;, &amp;ldquo;JavaSecurity&amp;rdquo; and &amp;ldquo;JavaMDNS&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;To get to the files that where installed by those packages we call:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cd /private/var/db/receipts
lsbom -s com.apple.pkg.JavaSecurity.bom com.apple.pkg.JavaMDNS.bom com.apple.pkg.JavaForMacOSX107.bom
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Last thing to do is remove the three .bom and three .plist files from: /private/var/db/receipts.&lt;/p&gt;
&lt;p&gt;You are done&lt;/p&gt;
&lt;p&gt;PS&lt;/p&gt;
&lt;p&gt;Two folder to worth looking at are:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;/System/Library/Java/JavaVirtualMachines/
/Library/Java/JavaVirtualMachines/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Setting up a new Mac</title>
      <link>https://loessl.org/posts/setting-up-a-new-mac/</link>
      <pubDate>Fri, 01 Feb 2013 21:50:00 +0000</pubDate>
      
      <guid>https://loessl.org/posts/setting-up-a-new-mac/</guid>
      <description>&lt;p&gt;Every time I setup a new Mac system I wonder &amp;ldquo;what else do I have to set/configure&amp;rdquo; so I decided today while setting up a new Mac that I will write down the (imho) most important steps, settings and applications. Thus I have a step by step list next time I set up a new Mac (:&lt;/p&gt;
&lt;p&gt;This post is subject to change without prior notice.&lt;/p&gt;
&lt;h2 id=&#34;system-preferences&#34;&gt;System Preferences&lt;/h2&gt;
&lt;h3 id=&#34;general&#34;&gt;General&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Ask to keep changes when closing documents&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Close windows when quitting an application&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;mission-control&#34;&gt;Mission Control&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Show Dashboard as a space&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Automatically rearrange Spaces based on most recent use&lt;/li&gt;
&lt;li&gt;Set up hot corners&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;language--text&#34;&gt;Language &amp;amp; Text&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Remove unneeded languages&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;security--privacy&#34;&gt;Security &amp;amp; Privacy&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Require password &amp;ldquo;5 seconds&amp;rdquo; after sleep or screensaver begins&lt;/li&gt;
&lt;li&gt;activate &amp;ldquo;FileVault&amp;rdquo;&lt;/li&gt;
&lt;li&gt;activate &amp;ldquo;Firewall&amp;rdquo; (and/or set up pf)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;notifications&#34;&gt;Notifications&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Mail -&amp;gt; Alert &amp;amp;&amp;amp; in the Mail application set only VIP send notifications&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;display&#34;&gt;Display&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[ ] Automatically adjust brightness&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;energy-saver&#34;&gt;Energy Saver&lt;/h3&gt;
&lt;p&gt;Set sleeping times&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Wake for network access (For laptops off)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;keyboard&#34;&gt;Keyboard&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Adjust keyboard brightness in low light&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; All controls&lt;/li&gt;
&lt;li&gt;Map &amp;ldquo;Tab&amp;rdquo; to &amp;ldquo;Ctrl&amp;rdquo;&lt;/li&gt;
&lt;li&gt;higher Key Repeat rate&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;network&#34;&gt;Network&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[  ] Ask to join new networks&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;sharing&#34;&gt;Sharing&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Remote login&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;software-update&#34;&gt;Software Update&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Install system data files and security updates&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;applications&#34;&gt;Applications&lt;/h2&gt;
&lt;h3 id=&#34;finder-preferences&#34;&gt;Finder Preferences&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;New Finder windows show: home&lt;/li&gt;
&lt;li&gt;Show these items in the sidebar -&amp;gt; add your home folder&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Show all filename extensions&lt;/li&gt;
&lt;li&gt;Remove &amp;ldquo;All My Files&amp;rdquo; from Sidebar&lt;/li&gt;
&lt;li&gt;Show Path Bar&lt;/li&gt;
&lt;li&gt;Show Status Bar&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;contacts&#34;&gt;Contacts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Default Account&lt;/li&gt;
&lt;li&gt;Adress Format&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;iterm2&#34;&gt;iTerm2&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;set scrollback buffer higher&lt;/li&gt;
&lt;li&gt;Right option key acts as +ESC&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;applications-needed&#34;&gt;Applications needed&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;iTerm2&lt;/li&gt;
&lt;li&gt;Adium&lt;/li&gt;
&lt;li&gt;AppCleaner&lt;/li&gt;
&lt;li&gt;Evernote&lt;/li&gt;
&lt;li&gt;Chrome&lt;/li&gt;
&lt;li&gt;Firefox&lt;/li&gt;
&lt;li&gt;sublime2&lt;/li&gt;
&lt;li&gt;Xcode
&lt;ul&gt;
&lt;li&gt;install simulator&lt;/li&gt;
&lt;li&gt;install documentation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;tunnelblick&lt;/li&gt;
&lt;li&gt;flux&lt;/li&gt;
&lt;li&gt;nvALT&lt;/li&gt;
&lt;li&gt;Trim Enabler&lt;/li&gt;
&lt;li&gt;Xee&lt;/li&gt;
&lt;li&gt;Pester&lt;/li&gt;
&lt;li&gt;Caffeine (TODO: Rewrite that tool)&lt;/li&gt;
&lt;li&gt;XQuartz&lt;/li&gt;
&lt;li&gt;Tunnelblick&lt;/li&gt;
&lt;li&gt;Dash&lt;/li&gt;
&lt;li&gt;Timingapp&lt;/li&gt;
&lt;li&gt;DOSBox&lt;/li&gt;
&lt;li&gt;puu.sh&lt;/li&gt;
&lt;li&gt;ReadKit&lt;/li&gt;
&lt;li&gt;TestFlight&lt;/li&gt;
&lt;li&gt;Crashlytics&lt;/li&gt;
&lt;li&gt;CoverStory&lt;/li&gt;
&lt;li&gt;SQLite Professional&lt;/li&gt;
&lt;li&gt;Liya&lt;/li&gt;
&lt;li&gt;Spectacle&lt;/li&gt;
&lt;li&gt;VLC&lt;/li&gt;
&lt;li&gt;texstudio&lt;/li&gt;
&lt;li&gt;Tyme&lt;/li&gt;
&lt;li&gt;Spotify&lt;/li&gt;
&lt;li&gt;1Password&lt;/li&gt;
&lt;li&gt;Keyboard Cleaner&lt;/li&gt;
&lt;li&gt;Sourcetree&lt;/li&gt;
&lt;li&gt;Caffeine&lt;/li&gt;
&lt;li&gt;Shiori&lt;/li&gt;
&lt;li&gt;Marked 2&lt;/li&gt;
&lt;li&gt;Pixelmator&lt;/li&gt;
&lt;li&gt;DayOne&lt;/li&gt;
&lt;li&gt;PaintCode&lt;/li&gt;
&lt;li&gt;Anki&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;homebrew&#34;&gt;homebrew&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;wine (put it up here, so it will install deps with -universal)&lt;/li&gt;
&lt;li&gt;hydra (nikto)&lt;/li&gt;
&lt;li&gt;dsniff&lt;/li&gt;
&lt;li&gt;htop-osx&lt;/li&gt;
&lt;li&gt;metas*****&lt;/li&gt;
&lt;li&gt;mplayer&lt;/li&gt;
&lt;li&gt;ngrep&lt;/li&gt;
&lt;li&gt;nmap&lt;/li&gt;
&lt;li&gt;p0f&lt;/li&gt;
&lt;li&gt;smartmontools&lt;/li&gt;
&lt;li&gt;unrar&lt;/li&gt;
&lt;li&gt;wget&lt;/li&gt;
&lt;li&gt;wine&lt;/li&gt;
&lt;li&gt;wireshark&lt;/li&gt;
&lt;li&gt;colordiff&lt;/li&gt;
&lt;li&gt;appledoc&lt;/li&gt;
&lt;li&gt;git (the version in brew is much better then the XCode version)&lt;/li&gt;
&lt;li&gt;duply&lt;/li&gt;
&lt;li&gt;openvpn&lt;/li&gt;
&lt;li&gt;sshfs&lt;/li&gt;
&lt;li&gt;sloccount&lt;/li&gt;
&lt;li&gt;mmv&lt;/li&gt;
&lt;li&gt;git-cal&lt;/li&gt;
&lt;li&gt;mpv (needs extra repo)&lt;/li&gt;
&lt;li&gt;cmake&lt;/li&gt;
&lt;li&gt;curl&lt;/li&gt;
&lt;li&gt;ddate&lt;/li&gt;
&lt;li&gt;dos2unix&lt;/li&gt;
&lt;li&gt;figlet&lt;/li&gt;
&lt;li&gt;toilet&lt;/li&gt;
&lt;li&gt;fortune&lt;/li&gt;
&lt;li&gt;geoip&lt;/li&gt;
&lt;li&gt;hexedit&lt;/li&gt;
&lt;li&gt;jq (nice json parser)&lt;/li&gt;
&lt;li&gt;svg2png&lt;/li&gt;
&lt;li&gt;tcpflow&lt;/li&gt;
&lt;li&gt;tcpreplay&lt;/li&gt;
&lt;li&gt;mitmproxy&lt;/li&gt;
&lt;li&gt;class-dump&lt;/li&gt;
&lt;li&gt;arpoison&lt;/li&gt;
&lt;li&gt;pngquant&lt;/li&gt;
&lt;li&gt;mpv&lt;/li&gt;
&lt;li&gt;sntop&lt;/li&gt;
&lt;li&gt;sslscan&lt;/li&gt;
&lt;li&gt;fasd&lt;/li&gt;
&lt;li&gt;ag&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;other&#34;&gt;Other&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;cocoapods&lt;/li&gt;
&lt;li&gt;homebrew&lt;/li&gt;
&lt;li&gt;copy over your ~/Library/Keychain&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;config-files-to-copy&#34;&gt;Config files to copy&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;.vim*&lt;/li&gt;
&lt;li&gt;.screenrc&lt;/li&gt;
&lt;li&gt;.mplayer&lt;/li&gt;
&lt;li&gt;.mpv&lt;/li&gt;
&lt;li&gt;.lldbinit&lt;/li&gt;
&lt;li&gt;.zsh*&lt;/li&gt;
&lt;li&gt;.oh-my-zsh&lt;/li&gt;
&lt;li&gt;.ssh&lt;/li&gt;
&lt;li&gt;.git*&lt;/li&gt;
&lt;li&gt;.ssh*&lt;/li&gt;
&lt;li&gt;Library/lldb&lt;/li&gt;
&lt;li&gt;Library/Services&lt;/li&gt;
&lt;li&gt;Library/Saved\ Searches&lt;/li&gt;
&lt;li&gt;Library/PDF\ Services&lt;/li&gt;
&lt;li&gt;other important folders:
&lt;ul&gt;
&lt;li&gt;Music, Movies, Pictures, Documents, Desktop&lt;/li&gt;
&lt;li&gt;src, wichtig, script&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;plist-files-and-other-hacks&#34;&gt;plist files and other hacks&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# defaults write&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# iTerm2 testing&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# defaults write com.googlecode.iterm2.plist SetCtype -bool true&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Make Safari’s search banners default to Contains instead of Starts With&lt;/span&gt;
defaults write com.apple.Safari FindOnPageMatchesWordStartsOnly -bool FALSE

&lt;span style=&#34;color:#75715e&#34;&gt;# Prevent Safari from opening ‘safe’ files automatically after downloading&lt;/span&gt;
defaults write com.apple.Safari AutoOpenSafeDownloads -bool false

&lt;span style=&#34;color:#75715e&#34;&gt;# Enable Safari’s debug menu&lt;/span&gt;
defaults write com.apple.Safari IncludeInternalDebugMenu -bool true

&lt;span style=&#34;color:#75715e&#34;&gt;# Enable the Develop menu and the Web Inspector in Safari&lt;/span&gt;
defaults write com.apple.Safari IncludeDevelopMenu -bool true
defaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true
defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true

&lt;span style=&#34;color:#75715e&#34;&gt;# Speed up Mission Control animations&lt;/span&gt;
defaults write com.apple.dock expose-animation-duration -float 0.12

&lt;span style=&#34;color:#75715e&#34;&gt;# Make Dock icons of hidden applications translucent&lt;/span&gt;
defaults write com.apple.dock showhidden -bool TRUE

&lt;span style=&#34;color:#75715e&#34;&gt;# Enable highlight hover effect for the grid view of a stack (Dock)&lt;/span&gt;
defaults write com.apple.dock mouse-over-hilite-stack -bool TRUE

&lt;span style=&#34;color:#75715e&#34;&gt;# Remove the auto-hiding Dock delay&lt;/span&gt;
defaults write com.apple.dock autohide-delay -float &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Remove the animation when hiding/showing the Dock&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# defaults write com.apple.dock autohide-time-modifier -float 0&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Finder: allow text selection in Quick Look&lt;/span&gt;
defaults write com.apple.finder QLEnableTextSelection -bool TRUE

&lt;span style=&#34;color:#75715e&#34;&gt;# Finder: show all filename extensions&lt;/span&gt;
defaults write NSGlobalDomain AppleShowAllExtensions -bool true

&lt;span style=&#34;color:#75715e&#34;&gt;# Finder: show status bar&lt;/span&gt;
defaults write com.apple.finder ShowStatusBar -bool true

&lt;span style=&#34;color:#75715e&#34;&gt;# Finder: show path bar&lt;/span&gt;
defaults write com.apple.finder ShowPathbar -bool true

&lt;span style=&#34;color:#75715e&#34;&gt;# When performing a search, search the current folder by default&lt;/span&gt;
defaults write com.apple.finder FXDefaultSearchScope -string &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SCcf&amp;#34;&lt;/span&gt;




&lt;span style=&#34;color:#75715e&#34;&gt;##&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# chflags&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##&lt;/span&gt;

chflags nohidden ~/Library/


&lt;span style=&#34;color:#75715e&#34;&gt;##&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# power management&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Disable the sudden motion sensor as it’s not useful for SSDs&lt;/span&gt;
sudo pmset -a sms &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;



killall Dock
killall Finder

&lt;span style=&#34;color:#75715e&#34;&gt;# for app in &amp;#34;Activity Monitor&amp;#34; &amp;#34;Address Book&amp;#34; &amp;#34;Calendar&amp;#34; &amp;#34;Contacts&amp;#34; &amp;#34;cfprefsd&amp;#34; \&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# &amp;#34;Dock&amp;#34; &amp;#34;Finder&amp;#34; &amp;#34;Mail&amp;#34; &amp;#34;Messages&amp;#34; &amp;#34;Safari&amp;#34; &amp;#34;SizeUp&amp;#34; &amp;#34;SystemUIServer&amp;#34; \&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# &amp;#34;Terminal&amp;#34; &amp;#34;Transmission&amp;#34; &amp;#34;Twitter&amp;#34; &amp;#34;iCal&amp;#34;; do&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# killall &amp;#34;${app}&amp;#34; &amp;gt; /dev/null 2&amp;gt;&amp;amp;1&lt;/span&gt;



&lt;span style=&#34;color:#75715e&#34;&gt;# sources:&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# http://secrets.blacktree.com&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# https://github.com/mathiasbynens/dotfiles/blob/master/.osx&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;updated&#34;&gt;Updated&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;2013 06 01: Some apps and plist tweaks added&lt;/li&gt;
&lt;li&gt;2013 11 20: More homebrew stuff + lots of Mac apps (mostly dev. stuff)&lt;/li&gt;
&lt;li&gt;2014 02 14: More homebrew stuff&lt;/li&gt;
&lt;li&gt;2014 08 06: More apps and plist&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>